"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnvironmentVariablesService = void 0;
const ConfigService_1 = require("./ConfigService");
class EnvironmentVariablesService extends ConfigService_1.ConfigService {
    constructor() {
        super(...arguments);
        this.serviceNameVariable = 'POWERTOOLS_SERVICE_NAME';
        this.xRayTraceIdVariable = '_X_AMZN_TRACE_ID';
    }
    get(name) {
        return process.env[name]?.trim() || '';
    }
    getServiceName() {
        return this.get(this.serviceNameVariable);
    }
    getXrayTraceId() {
        const xRayTraceData = this.getXrayTraceData();
        return xRayTraceData?.Root;
    }
    getXrayTraceSampled() {
        const xRayTraceData = this.getXrayTraceData();
        return xRayTraceData?.Sampled === '1';
    }
    isValueTrue(value) {
        const truthyValues = ['1', 'y', 'yes', 't', 'true', 'on'];
        return truthyValues.includes(value.toLowerCase());
    }
    getXrayTraceData() {
        const xRayTraceEnv = this.get(this.xRayTraceIdVariable);
        if (xRayTraceEnv === '')
            return undefined;
        if (!xRayTraceEnv.includes('='))
            return { Root: xRayTraceEnv };
        const xRayTraceData = {};
        xRayTraceEnv.split(';').forEach((field) => {
            const [key, value] = field.split('=');
            xRayTraceData[key] = value;
        });
        return xRayTraceData;
    }
}
exports.EnvironmentVariablesService = EnvironmentVariablesService;
